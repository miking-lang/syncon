# Statistics and command

```fish
# inside fragments/
for f in (find -name "*.syncon"); echo $f; syncon-parser pbt --ambiguity ../base.syncon $f --two-level; end
```

The command should have had `--restrictive-precedence`, but I do not believe there would have been a difference in this case.

ambig count: 11
unamb count: 75
error count: 6

Should be 92, one duplicate count somewhere

# Ambig

haskell/con_pat (missing forbids)
ocaml/labelled_fun_app (missing prec and assoc)
ocaml/references (missing prec)

ocaml/fun (known, looking into other encoding)

ocaml/match (essentially dangling else)
ocaml/function (essentially dangling else, same as ocaml/match)
inspired/arithmetic (missing prec, intended)
inspired/stm_match (essentially dangling else, same as ocaml/match)
inspired/structured_control (dangling else through intermediate prefix ops)
inspired/comparators (missing prec, intended)
ocaml/if (dangling else)


BUG: two-level isn't always showing all children?
     ocaml/labelled_fun_app shows
     ocamlOptLabelledFunAppPun having one child.
     Maybe not showing retained terminal children?
BUG: `syncon-parser pbt` does not exit with an
     error code when an error is detected.

# Followup
FIXED: haskell/con_pat
FIXED: ocaml/labelled_fun_app
FIXED: ocaml/references
