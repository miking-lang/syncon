syncon ocamlKnownPolyTag: Type =
  "[" ( ty1:Type? "|" ts1:OcamlTagSpec
      | "`" tn1:Ident ("of" tyo1:Type)?)
   ("|" ts2:OcamlTagSpec)* "]"

syncon ocamlOpenPolyTag: Type =
  "[>" ts1:OcamlTagSpec? ("|" ts2:OcamlTagSpec)* "]"

syncon ocamlClosedPolyTag: Type =
  "[<" "|"?
  ts1:OcamlTagSpecFull
  ("|" ts2:OcamlTagSpecFull)*
  (">" ("`" tn:Ident)+)?
  "]"

type OcamlTagSpec
syncon ocamlExplicitTagSpec: OcamlTagSpec =
  "`" tn1:Ident ("of" tyo1:Type)?
syncon ocamlExprTagSpec: OcamlTagSpec =
  ty:Type

type OcamlTagSpecFull
syncon ocamlExplicitTagSpecFull: OcamlTagSpecFull =
  "`" tn1:Ident
  ("of" "&"? tyo1:Type ("&" tyo2:Type))?
syncon ocamlExprTagSpecFull: OcamlTagSpecFull =
  ty:Type
